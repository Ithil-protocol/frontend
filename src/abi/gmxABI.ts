export const gmxABI = [
  {
    inputs: [
      { internalType: "address", name: "_manager", type: "address" },
      { internalType: "address", name: "_router", type: "address" },
      { internalType: "address", name: "_routerV2", type: "address" },
      { internalType: "uint256", name: "_deadline", type: "uint256" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AboveRiskThreshold", type: "error" },
  { inputs: [], name: "InterestRateOverflow", type: "error" },
  { inputs: [], name: "InvalidInitParams", type: "error" },
  { inputs: [], name: "InvalidParams", type: "error" },
  { inputs: [], name: "InvalidStatus", type: "error" },
  { inputs: [], name: "InvalidToken", type: "error" },
  { inputs: [], name: "Locked", type: "error" },
  { inputs: [], name: "LossByArbitraryAddress", type: "error" },
  { inputs: [], name: "MarginTooLow", type: "error" },
  { inputs: [], name: "OnlyLiquidator", type: "error" },
  { inputs: [], name: "RestrictedAccess", type: "error" },
  { inputs: [], name: "RestrictedToOwner", type: "error" },
  { inputs: [], name: "ZeroGlpSupply", type: "error" },
  { inputs: [], name: "ZeroMarginLoan", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "BaseRiskSpreadWasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newGuardian",
        type: "address",
      },
    ],
    name: "GuardianWasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payoff",
        type: "uint256",
      },
    ],
    name: "LiquidationTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "LiquidatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bool", name: "status", type: "bool" },
    ],
    name: "LockWasToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
    ],
    name: "MinMarginUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IService.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    name: "PositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IService.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    name: "PositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "riskSpread",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "halfTime",
        type: "uint256",
      },
    ],
    name: "RiskParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "agreements",
    outputs: [
      { internalType: "uint256", name: "createdAt", type: "uint256" },
      { internalType: "enum IService.Status", name: "status", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenID", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "close",
    outputs: [
      { internalType: "uint256[]", name: "amountsOut", type: "uint256[]" },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "loan", type: "uint256" },
      { internalType: "uint256", name: "margin", type: "uint256" },
      { internalType: "uint256", name: "freeLiquidity", type: "uint256" },
    ],
    name: "computeBaseRateAndSpread",
    outputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IService.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    name: "computeDueFees",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenID", type: "uint256" },
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IService.Agreement",
        name: "agreement",
        type: "tuple",
      },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "edit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenID", type: "uint256" }],
    name: "getAgreement",
    outputs: [
      {
        components: [
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "uint256", name: "margin", type: "uint256" },
          {
            internalType: "uint256",
            name: "interestAndSpread",
            type: "uint256",
          },
        ],
        internalType: "struct IService.Loan[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum IService.ItemType",
            name: "itemType",
            type: "uint8",
          },
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "identifier", type: "uint256" },
          { internalType: "uint256", name: "amount", type: "uint256" },
        ],
        internalType: "struct IService.Collateral[]",
        name: "",
        type: "tuple[]",
      },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "enum IService.Status", name: "", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserAgreements",
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IService.Agreement[]",
        name: "",
        type: "tuple[]",
      },
      { internalType: "uint256[]", name: "", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glp",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      { internalType: "contract IGlpManager", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "halvingTime",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "latestAndBase",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "id", type: "uint256" }],
    name: "liquidationScore",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidator",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [{ internalType: "contract IManager", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "minMargin",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  { internalType: "address", name: "token", type: "address" },
                  { internalType: "uint256", name: "amount", type: "uint256" },
                  { internalType: "uint256", name: "margin", type: "uint256" },
                  {
                    internalType: "uint256",
                    name: "interestAndSpread",
                    type: "uint256",
                  },
                ],
                internalType: "struct IService.Loan[]",
                name: "loans",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum IService.ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  { internalType: "address", name: "token", type: "address" },
                  {
                    internalType: "uint256",
                    name: "identifier",
                    type: "uint256",
                  },
                  { internalType: "uint256", name: "amount", type: "uint256" },
                ],
                internalType: "struct IService.Collateral[]",
                name: "collaterals",
                type: "tuple[]",
              },
              { internalType: "uint256", name: "createdAt", type: "uint256" },
              {
                internalType: "enum IService.Status",
                name: "status",
                type: "uint8",
              },
            ],
            internalType: "struct IService.Agreement",
            name: "agreement",
            type: "tuple",
          },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct IService.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "margin", type: "uint256" },
              {
                internalType: "uint256",
                name: "interestAndSpread",
                type: "uint256",
              },
            ],
            internalType: "struct IService.Loan[]",
            name: "loans",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IService.ItemType",
                name: "itemType",
                type: "uint8",
              },
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "identifier", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IService.Collateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          {
            internalType: "enum IService.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IService.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTracker",
    outputs: [
      { internalType: "contract IRewardTracker", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "riskSpreads",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      { internalType: "contract IRewardRouter", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerV2",
    outputs: [
      { internalType: "contract IRewardRouterV2", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_guardian", type: "address" }],
    name: "setGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_liquidator", type: "address" }],
    name: "setLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bool", name: "_locked", type: "bool" }],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "margin", type: "uint256" },
    ],
    name: "setMinMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "riskSpread", type: "uint256" },
      { internalType: "uint256", name: "baseRate", type: "uint256" },
      { internalType: "uint256", name: "halfTime", type: "uint256" },
    ],
    name: "setRiskParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
    name: "tokenByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "uint256", name: "index", type: "uint256" },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollateral",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVirtualDeposits",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdgVault",
    outputs: [
      { internalType: "contract IUsdgVault", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "virtualDeposit",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenID", type: "uint256" }],
    name: "wethReward",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
] as const;
